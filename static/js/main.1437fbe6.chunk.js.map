{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","onAddMovie","_useState","useState","_useState2","_slicedToArray","query","setQuery","_useState3","_useState4","setMovie","_useState5","_useState6","isError","setIsError","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","count","setCount","movieToAdd","Title","Plot","Poster","imdbID","_Fragment","onSubmit","e","preventDefault","prev","fetch","concat","then","res","json","catch","Response","Error","getMovie","response","Object","hasOwn","error","console","log","finally","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","onClick","App","setMovies","find","m","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1437fbe6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\n// eslint-disable-next-line max-len\nconst DEFAULT_IMAGE_URL = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl !== 'N/A' ? movie.imgUrl : DEFAULT_IMAGE_URL}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAddMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [query, setQuery] = useState('');\n  const [movie, setMovie] = useState<MovieData | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [count, setCount] = useState(0);\n\n  const imdbBaseUrl = 'https://www.imdb.com/title/';\n\n  const movieToAdd = {\n    title: movie?.Title,\n    description: movie?.Plot,\n    imgUrl: movie?.Poster,\n    imdbUrl: imdbBaseUrl + movie?.imdbID,\n    imdbId: movie?.imdbID,\n  };\n\n  const handleMovieSearch = (e: React.FormEvent) => {\n    e.preventDefault();\n    setCount(prev => prev + 1);\n\n    setIsLoading(true);\n\n    getMovie(query)\n      .then(response => {\n        if (Object.hasOwn(response, 'Error')) {\n          setIsError(true);\n        } else {\n          setMovie(response as MovieData);\n        }\n      })\n      // eslint-disable-next-line no-console\n      .catch(error => console.log(error))\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleMovieAdd = () => {\n    setCount(0);\n    setMovie(null);\n    setQuery('');\n\n    onAddMovie(movieToAdd as Movie);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleMovieSearch}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn(\n                'input',\n                { 'is-danger': isError },\n              )}\n              value={query}\n              onChange={e => {\n                setQuery(e.target.value);\n                setIsError(false);\n              }}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!query}\n            >\n              {count === 0\n                ? 'Find a movie'\n                : 'Search again'}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleMovieAdd}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard\n            movie={movieToAdd as Movie}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=4a2aad8a';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (movie: Movie) => {\n    const isExist = movies.find(m => m.imdbId === movie.imdbId);\n\n    if (!isExist) {\n      setMovies(prevMovies => ([\n        ...prevMovies,\n        movie,\n      ]));\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovie={handleAddMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}